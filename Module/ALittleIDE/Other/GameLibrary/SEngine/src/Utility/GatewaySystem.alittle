
namespace ALittle;

public class GatewayUpdateRoute
{
    private GatewayServer.NUpdateRouteInfo _info;
    private GatewayServer.NUpdateRouteWeight _weight;
    private IMsgCommon _session;
    
    public ctor(string client_yun_ip, string client_ip, int client_port
               , string http_yun_ip, string http_ip, int http_port, int weight)
    {
        this._info = new GatewayServer.NUpdateRouteInfo();
        this._info.route_weight = weight;
        this._info.route_info = new GatewayServer.ConnectInfo();
        this._info.route_info.client_ip = client_yun_ip;
        if (client_yun_ip == null || client_yun_ip == "")
            this._info.route_info.client_ip = client_ip;
        this._info.route_info.client_port = client_port;
        this._info.route_info.http_ip = http_yun_ip;
        if (http_yun_ip == null || http_yun_ip == "")
            this._info.route_info.http_ip = http_ip;
        this._info.route_info.http_port = http_port;
        
        this._weight = new GatewayServer.NUpdateRouteWeight();
        this._weight.route_weight = weight;
        
        A_SessionSystem.AddEventListener(this, this.HandleAnySessionDisconnected);
        A_SessionSystem.AddEventListener(this, this.HandleAnySessionConnected);
        A_SessionSystem.AddConnectSession(RouteType.RT_GATEWAY, RouteNum.RN_DEFAULT);
    }
    
    
    // 连接断开了
    private fun HandleAnySessionDisconnected(SessionDisconnectEvent event)
    {
        if (event.route_type != RouteType.RT_GATEWAY) return;
        this._session = null;
        return;
    }
    
    // 连接
    private fun HandleAnySessionConnected(SessionConnectEvent event)
    {
        if (event.route_type != RouteType.RT_GATEWAY) return;
        this._session = event.session;
        
        this._session.SendMsg(this._info);
    }
    
    // 上传负载
    public fun UpdateRouteWeight(int weight)
    {
        this._info.route_weight = weight;
        this._weight.route_weight = weight;
        if (this._session == null) return;
        
        this._session.SendMsg(this._weight);
    }
}

public class GatewaySystem
{
    public ctor()
    {
        A_SessionSystem.AddEventListener(this, this.HandleAnySessionConnected);
    }
    
    private fun HandleAnySessionConnected(SessionConnectEvent event)
    {
        if (__CPPAPI_ServerSchedule.GetRouteType() == RouteType.RT_GAME && event.route_type == RouteType.RT_DATA)
        {
            // 发送GameServer信息
            {
                var param = new DataServer.GS2DATA_NGameServerInfo();
                param.client_ip = __CPPAPI_ServerSchedule.GetClientServerYunIp();
                if (param.client_ip == "") param.client_ip = __CPPAPI_ServerSchedule.GetClientServerIp();
                param.client_port = __CPPAPI_ServerSchedule.GetClientServerPort();
                event.session.SendMsg(param);
            }
        }
    }
}

public var A_GatewaySystem = new GatewaySystem();

[Msg]
public static HandleNRouteConnected(ALittle.IMsgCommon client, GatewayServer.NRouteConnected msg)
{
    if (__CPPAPI_ServerSchedule.GetRouteType() == RouteType.RT_GAME && msg.route_type == RouteType.RT_DATA)
        A_SessionSystem.AddConnectSession(msg.route_type, msg.route_num);
}