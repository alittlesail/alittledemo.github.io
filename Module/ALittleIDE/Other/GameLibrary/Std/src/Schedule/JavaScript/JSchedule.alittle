
[Language(JavaScript)]
namespace JavaScript;

public class JSchedule : ALittle.ISchedule
{
    private int _last_time;
    private Functor<(Functor<(int)>):int> _requestAnimationFrame;
    private Functor<(int)> _callback;
    private bool _run;
    
    public ctor()
    {
        var global = cast<Map<string, Functor<(Functor<(int)>):int>>>(window);
        this._requestAnimationFrame = global["requestAnimationFrame"];
        if (this._requestAnimationFrame == null) this._requestAnimationFrame = global["mozRequestAnimationFrame"];
        if (this._requestAnimationFrame == null) this._requestAnimationFrame = global["webkitRequestAnimationFrame"];
        if (this._requestAnimationFrame == null) this._requestAnimationFrame = global["msRequestAnimationFrame"];
        this._callback = bind(this.MainLoop, this);
        
        this._run = false;
    }

    // 在JS版本下Run直接退出，因为JS有自己的事件系统
    public fun Run()
    {
        this.RunInFrame();
    }

    public fun RunInFrame()
    {
        if (this._run) return;
        this._run = true;
        
        if (this._requestAnimationFrame != null)
            cast<javascript.Function>(this._requestAnimationFrame).call(window, this._callback);
        else
            ALittle.Error("current browser is not support requestAnimationFrame");
    }
    
    public fun MainLoop(int cur_time)
    {
        if (this._last_time == null)
        {
            this._last_time = cur_time;
            return;
        }
        A_JLoopSystem.Update(cur_time - this._last_time);
        this._last_time = cur_time;
        
        cast<javascript.Function>(this._requestAnimationFrame).call(window, this._callback);
    }
}

public var A_JSchedule = new JSchedule();