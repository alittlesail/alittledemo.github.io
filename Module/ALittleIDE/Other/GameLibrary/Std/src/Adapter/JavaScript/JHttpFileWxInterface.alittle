
[Language(JavaScript)]
namespace JavaScript;

private var __JHTTPWXFILE_MAXID:int = 0;

public class JHttpFileWxInterface : ALittle.IHttpFileSenderNative
{
    private int _id;
    private string _url;
    private string _file_path;
    private bool _download;
    private bool _array_buffer;
    private javascript.WxRequestTask _request;
    private javascript.WxResponseInfo _response;
    
    public ctor()
    {
        ++ __JHTTPWXFILE_MAXID;
        this._id = __JHTTPWXFILE_MAXID;
    }
    public fun GetID() : int { return this._id; }
    
    // start_size暂时不支持
    public fun SetURL(string url, string file_path, bool download, int start_size, bool array_buffer)
    {
        this._url = url;
        this._file_path = file_path;
        this._download = download;
        this._array_buffer = array_buffer;
    }
    public fun Start()
    {
        var content:string;
        var buffer:javascript.ArrayBuffer;
        if (!this._download)
        {
            content, buffer = File_LoadFile(this._file_path);
            if (content == null && buffer == null)
            {
                ALittle.__ALITTLEAPI_HttpFileFailed(this._id, "file is not exist:" .. this._file_path);
                return;
            }
        }
            
        var info = new javascript.WxRequestInfo();
        info.url = this._url;
        if (this._download)
            info.method = "GET";
        else
            info.method = "POST";
        if (content != null)
        {
            info.dataType = "text";
            info.data = content;
        }
        elseif (buffer != null)
        {
            info.dataType = "arraybuffer";
            info.data = buffer;
        }
        if (this._array_buffer == true)
        	info.responseType = "arraybuffer";
        info.success = bind(this.HandleCompleted, this);
        info.fail = bind(this.HandleError, this);
        this._request = window.wx.request(info);
    }
    public fun Stop()
    {
        if (this._request != null)
            this._request.abort();
    }
    
    public fun GetPath() : string { return this._file_path; }
    
    public fun GetContent() : string { return this._response.data; }
    
    private fun HandleError()
	{
        ALittle.__ALITTLEAPI_HttpFileFailed(this._id, "wx.request failed");
	}
    
	private fun HandleCompleted(javascript.WxResponseInfo info)
	{
        var content:string = null;
        var buffer:javascript.ArrayBuffer = null;
        if (this._array_buffer) buffer = info.data;
        else content = info.data;
        if (this._download && !File_SaveFile(this._file_path, content, buffer))
        {
            ALittle.__ALITTLEAPI_HttpFileFailed(this._id, "file save failed:" .. this._file_path);
            return;
        }
        
        this._response = info;
        ALittle.__ALITTLEAPI_HttpFileSucceed(this._id);
	}
    
    private fun HandleOnProgress(javascript.XMLHttpRequestOnProgressEvent event)
    {
        ALittle.__ALITTLEAPI_HttpFileProcess(this._id, event.loaded, event.total);
    }
}