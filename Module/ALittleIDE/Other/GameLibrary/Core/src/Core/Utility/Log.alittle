
namespace ALittle;

// 设置自定义的日志函数，如果没有设置，那么默认使用lua的print
// func回调的第一个参数是打印的内容，第二个参数是打印的等级参考LogLevel枚举
public enum LogLevel
{
    INFO = 0;
    WARN = 1;
    ERROR = 2;
}

private var __LOG_FUNC:Functor<(string, int)>;

public static SetLogFunc(Functor<(string, int)> func)
{
    __LOG_FUNC = func;
}

public static Log(...)
{
    [Language(JavaScript)]
    if (__LOG_FUNC != null)
    {
        var slist = [cast<string>(...)];
        for (var index, value in slist)
            slist[index] = String_ToString(value);
        var s = String_Join(slist, "\t");
        __LOG_FUNC(s, 0);
        return;    
    }
    
    [Language(Lua)]
    if (__LOG_FUNC != null)
    {
        var scount:int = lua.select("#", ...);
        var slist = new List<string>();
        for (var i = 1; i <= scount; 1)
            slist[i] = String_ToString(lua.select(i, ...));
        var s = String_Join(slist, "\t");
        __LOG_FUNC(s, 0);
        return;    
    }
    
    [Language(Lua)]
    lua.print(...);
    
    [Language(JavaScript)]
    javascript.console.log(...);
}

public static Warn(...)
{
    [Language(JavaScript)]
    if (__LOG_FUNC != null)
    {
        var slist = [cast<string>(...)];
        for (var index, value in slist)
            slist[index] = String_ToString(value);
        var s = String_Join(slist, "\t");
        __LOG_FUNC(s, 1);
        return;    
    }
    
    [Language(Lua)]
    if (__LOG_FUNC != null)
    {
        var scount:int = lua.select("#", ...);
        var slist = new List<string>();
        for (var i = 1; i <= scount; 1)
            slist[i] = String_ToString(lua.select(i, ...));
        var s = String_Join(slist, "\t");
        __LOG_FUNC(s, 1);
        return;    
    }
    
    [Language(Lua)]
    lua.print(...);
    
    [Language(JavaScript)]
    javascript.console.warn(...);
}

public static Error(...)
{
    [Language(JavaScript)]
    if (__LOG_FUNC != null)
    {
        var slist = [cast<string>(...)];
        for (var index, value in slist)
            slist[index] = String_ToString(value);
        var s = String_Join(slist, "\t");
        __LOG_FUNC(s, 2);
        return;    
    }
    
    [Language(Lua)]
    if (__LOG_FUNC != null)
    {
        var scount:int = lua.select("#", ...);
        var slist = new List<string>();
        for (var i = 1; i <= scount; 1)
            slist[i] = String_ToString(lua.select(i, ...));
        var s = String_Join(slist, "\t");
        __LOG_FUNC(s, 2);
        return;    
    }
    
    [Language(Lua)]
    lua.print(...);
    
    [Language(JavaScript)]
    javascript.console.error(...);
}
