namespace ALittle;

[Language(Lua)]
private var tonumber = lua.tonumber;
[Language(Lua)]
private var floor = lua.math.floor;
[Language(Lua)]
private var ceil = lua.math.ceil;
[Language(Lua)]
private var random = lua.math.random;
[Language(Lua)]
private var randomseed = lua.math.randomseed;
[Language(Lua)]
private var abs = lua.math.abs;
[Language(Lua)]
private var cos = lua.math.cos;
[Language(Lua)]
private var sin = lua.math.sin;
[Language(Lua)]
private var tan = lua.math.tan;
[Language(Lua)]
private var sqrt = lua.math.sqrt;

public static Math_Min(double x, double y) : double
{
    if (x < y) return x;
    return y;
}

public static Math_Max(double x, double y) : double
{
    if (x < y) return y;
    return x;
}

public static Math_Sin(double v) : double
{
    [Language(Lua)]
    return sin(v);
    
    [Language(JavaScript)]
    return javascript.Math.sin(v);
}

public static Math_Tan(double v) : double
{
    [Language(Lua)]
    return tan(v);
    
    [Language(JavaScript)]
    return javascript.Math.tan(v);
}

public static Math_Cos(double v) : double
{
    [Language(Lua)]
    return cos(v);
    
    [Language(JavaScript)]
    return javascript.Math.cos(v);
}

public static Math_Abs(double v) : double
{
    [Language(Lua)]
    return abs(v);
    
    [Language(JavaScript)]
    return javascript.Math.abs(v);
}

public static Math_Floor(double v) : int
{
    [Language(Lua)]
    return floor(v);
    
    [Language(JavaScript)]
    return javascript.Math.floor(v);
}

public static Math_Ceil(double v) : int
{
    [Language(Lua)]
    return ceil(v);

    [Language(JavaScript)]
    return javascript.Math.ceil(v);
}

public static Math_Sqrt(double v) : double
{
    [Language(Lua)]
    return sqrt(v);

    [Language(JavaScript)]
    return javascript.Math.sqrt(v);
}

public static Math_ToInt(string s) : int
{
    [Language(Lua)]
    var n = tonumber(s);
    [Language(Lua)]
    if (n == null) return null;
    [Language(Lua)]
    return floor(n);
    
    [Language(JavaScript)]
    var value = javascript.parseInt(s);
    [Language(JavaScript)]
    if (javascript.isNaN(value)) return null;
    else return value;
}

public static Math_ToIntOrZero(string s) : int
{
    var value = Math_ToInt(s);
    if (value == null) return 0;
    return value;
}

public static Math_ToDouble(string s) : double
{
    [Language(Lua)]
    return tonumber(s);
    
    [Language(JavaScript)]
    var value = javascript.parseFloat(s);
    [Language(JavaScript)]
    if (javascript.isNaN(value)) return null;
    else return value;
}

public static Math_ToDoubleOrZero(string s) : double
{
    var value = Math_ToDouble(s);
    if (value == null) return 0;
    return value;
}

public static Math_RandomSeed(int seed)
{
    [Language(Lua)]
    randomseed(seed);
}

public static Math_RandomInt(int min, int max) : int
{
    [Language(Lua)]
    return cast<int>(random(min, max));
    
    [Language(JavaScript)]
    return javascript.Math.floor(javascript.Math.random() * (max - min + 1)) + min;
}

public static Math_RandomDouble(double min, double max) : double
{
    [Language(Lua)]
    return random() * (max - min) + min;
    
    [Language(JavaScript)]
    return javascript.Math.random() * (max - min) + min;
}