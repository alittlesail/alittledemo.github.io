
namespace ALittle;

// 结构体反射信息
public struct StructInfo
{
    string name;                 // 带命名域的结构体名
    string ns_name;              // 所在命名域名
    string rl_name;              // 实际名
    int hash_code;               // 对name进行计算的哈希值
    List<string> name_list;      // 变量名列表
    List<string> type_list;      // 变量类型列表
    Map<string, string> option_map; // 附加信息映射表
}

// 类反射信息
public struct ClassInfo
{
    string __name;                      // 类名
    ClassInfo __super;                  // 父类信息
    List<ClassInfo> __element;          // 模板元素
    Map<string, ClassInfo> __child;     // 继承于当前的子模板
    Map<string, Functor<(any):any>> __getter;    // getter
    Map<string, Functor<(any, any)>> __setter;   // setter
}

// 根据反射信息创建对象
public static NewObject(ClassInfo clazz, ...) : any
{
    [Language(Lua)]
    return cast<Functor<(any):any>>(clazz)(...);
    
    // 构造对象
    [Language(JavaScript)]
    return JavaScript.NewObject(clazz, ...);
}

// 动态转换
public static Cast<T:class, O:class>(O object) : T
{
    if (object == null) return null;
    var o_info = reflect(object);
    var t_info = reflect<T>;
    if (o_info != t_info) return null;
    return cast<T>(object);
}