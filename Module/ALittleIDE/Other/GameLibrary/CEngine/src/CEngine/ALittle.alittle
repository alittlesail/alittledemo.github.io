namespace lua;

public static __LUAAPI_Engine_Init()
{
    A_ScriptSystem.RunEngineScript("Utility/System");
    A_ScriptSystem.RunEngineScript("Utility/File");
    A_ScriptSystem.RunEngineScript("Utility/String");
    
    A_ScriptSystem.RunEngineScript("Utility/ConfigSystem");
    A_ScriptSystem.RunEngineScript("Utility/OtherSystem");
    A_ScriptSystem.RunEngineScript("Utility/AudioSystem");
    A_ScriptSystem.RunEngineScript("Utility/ScriptSystem");
    A_ScriptSystem.RunEngineScript("Utility/ModuleSystem");
    
    A_ScriptSystem.RunEngineScript("Version/VersionSystem");
    A_ScriptSystem.RunEngineScript("Version/VersionSystemWindows");
    A_ScriptSystem.RunEngineScript("Version/VersionSystemAndroid");
    A_ScriptSystem.RunEngineScript("Version/VersionSystemIOS");
    
    A_ScriptSystem.RunEngineScript("LoopSystem/LoopAnimation");
    A_ScriptSystem.RunEngineScript("LoopSystem/LoopAttribute");
    A_ScriptSystem.RunEngineScript("LoopSystem/LoopLinear");
    A_ScriptSystem.RunEngineScript("LoopSystem/LoopRit");

    A_ScriptSystem.RunEngineScript("UISystem/UIEnumTypes");
    A_ScriptSystem.RunEngineScript("UISystem/UIEventDispatcher");
    
    A_ScriptSystem.RunEngineScript("UISystem/Base/Matrix2D");
    A_ScriptSystem.RunEngineScript("UISystem/Base/DisplayObject");
    A_ScriptSystem.RunEngineScript("UISystem/Base/DisplayGroup");
    A_ScriptSystem.RunEngineScript("UISystem/Base/DisplayLayout");
    A_ScriptSystem.RunEngineScript("UISystem/Base/DisplayView");

    A_ScriptSystem.RunEngineScript("UISystem/Base/Quad");
    A_ScriptSystem.RunEngineScript("UISystem/Base/Image");
    A_ScriptSystem.RunEngineScript("UISystem/Base/Triangle");
    A_ScriptSystem.RunEngineScript("UISystem/Base/Sprite");
    A_ScriptSystem.RunEngineScript("UISystem/Base/Text");
    A_ScriptSystem.RunEngineScript("UISystem/Base/TextArea");
    A_ScriptSystem.RunEngineScript("UISystem/Base/TextEdit");
    A_ScriptSystem.RunEngineScript("UISystem/Base/TextInput");

    A_ScriptSystem.RunEngineScript("UISystem/Complex/TextButton");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/TextCheckButton");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/TextRadioButton");

    A_ScriptSystem.RunEngineScript("UISystem/Complex/Grid3");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/Grid9");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/Grid9Image");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/Linear");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/Tab");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/DropDown");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/Slider");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/ScrollBar");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/ScrollScreen");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/Dialog");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/TileTable");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/ImagePlay");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/SpritePlay");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/FramePlay");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/Piechart");

    A_ScriptSystem.RunEngineScript("UISystem/Complex/ImageInput");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/ImageEdit");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/RichArea");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/RichEdit");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/RichInput");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/ScrollList");
    A_ScriptSystem.RunEngineScript("UISystem/Complex/ScrollButton");

    A_ScriptSystem.RunEngineScript("UISystem/Special/SpringTextButton");

    A_ScriptSystem.RunEngineScript("UISystem/Plugin/SpringButton");
    A_ScriptSystem.RunEngineScript("UISystem/Plugin/SpringCheckButton");
    A_ScriptSystem.RunEngineScript("UISystem/Plugin/SpringRadioButton");
    A_ScriptSystem.RunEngineScript("UISystem/Plugin/SpringDialog");

    A_ScriptSystem.RunEngineScript("UISystem/Effect/EffectImage");
    
    A_ScriptSystem.RunEngineScript("UISystem/TextureManager");
    A_ScriptSystem.RunEngineScript("UISystem/ControlSystem");
    A_ScriptSystem.RunEngineScript("UISystem/LayerManager");
    A_ScriptSystem.RunEngineScript("UISystem/UISystem");
    
    ALittle.VersionSystem.RefreshVersion();
}

public static __LUAAPI_HandleConsoleCmd(string cmd)
{
    ALittle.ExecuteCommand(cmd);
}

public static __LUAAPI_FingerMoved(double x, double y, int finger_id, int touch_id)
{
    A_UISystem.HandleFingerMoved(x, y, finger_id, touch_id);
}

public static __LUAAPI_FingerDown(double x, double y, int finger_id, int touch_id)
{
    A_UISystem.HandleFingerDown(x, y, finger_id, touch_id);
}

public static __LUAAPI_FingerUp(double x, double y, int finger_id, int touch_id)
{
    A_UISystem.HandleFingerUp(x, y, finger_id, touch_id);
}

public static __LUAAPI_MouseMoved(double x, double y)
{
     A_UISystem.HandleMouseMoved(x, y);
}

public static __LUAAPI_LButtonDown(double x, double y, int count)
{
    A_UISystem.HandleLButtonDown(x, y, count);
}

public static __LUAAPI_LButtonUp(double x, double y)
{
    A_UISystem.HandleLButtonUp(x, y);
}

public static __LUAAPI_MButtonDown(double x, double y, int count)
{
    A_UISystem.HandleMButtonDown(x, y, count);
}

public static __LUAAPI_MButtonUp(double x, double y)
{
    A_UISystem.HandleMButtonUp(x, y);
}

public static __LUAAPI_RButtonDown(double x, double y, int count)
{
    A_UISystem.HandleRButtonDown(x, y, count);
}

public static __LUAAPI_RButtonUp(double x, double y)
{
    A_UISystem.HandleRButtonUp(x, y);
}

public static __LUAAPI_MouseWheel(double x, double y)
{
    A_UISystem.HandleMouseWheel(x, y);
}

public static __LUAAPI_KeyDown(int mod, int sym, int scancode)
{
    A_UISystem.HandleKeyDown(mod, sym, scancode);
}

public static __LUAAPI_KeyUp(int mod, int sym, int scancode)
{
    A_UISystem.HandleKeyUp(mod, sym, scancode);
}

public static __LUAAPI_ViewResized(int width, int height)
{
    A_UISystem.HandleViewResized(width, height);
}

public static __LUAAPI_TextInput(string text)
{
    A_UISystem.HandleTextInput(text);
}

public static __LUAAPI_TextEditing(string text, int start)
{
    A_UISystem.HandleTextEditing(text, start);
}

public static __LUAAPI_DropFile(string path)
{
    A_UISystem.HandleDropFile(path);
}

public static __LUAAPI_WindowEnter()
{
    A_UISystem.HandleWindowEnter();
}

public static __LUAAPI_WindowLeave()
{
    A_UISystem.HandleWindowLeave();
}
    
//////////////////////////////////////////////////////////////////-
public static __LUAAPI_Update(int frame_time)
{
    A_LoopSystem.Update(frame_time);
    A_WeakLoopSystem.Update(frame_time);
}
//////////////////////////////////////////////////////////////////-
    
public static __LUAAPI_WillEnterBackground()
{
    A_OtherSystem.HandleWillEnterBackground();
}

public static __LUAAPI_DidEnterBackground()
{
    A_OtherSystem.HandleDidEnterBackground();
}

public static __LUAAPI_WillEnterForeground()
{
    A_OtherSystem.HandleWillEnterForeground();
}

public static __LUAAPI_DidEnterForeground()
{
    A_OtherSystem.HandleDidEnterForeground();
}

public static __LUAAPI_LowMemory()
{
    A_OtherSystem.HandleLowMemory();
}

//////////////////////////////////////////////////////////////////-
// 客户端连接服务端，成功
public static __LUAAPI_ConnectSucceed(__CPPAPIMsgInterface msg_interface)
{
    var client = cast<ALittle.MsgSender>(ALittle.FindMsgSender(msg_interface.GetID()));
    if (client ==  null) return;
    client.HandleConnectSucceed();
}

// 断开连接
public static __LUAAPI_Disconnect(__CPPAPIMsgInterface msg_interface)
{
    var client = cast<ALittle.MsgSender>(ALittle.FindMsgSender(msg_interface.GetID()));
    if (client ==  null) return;
    client.HandleDisconnect();
}

// 客户端链接服务端，失败
public static __LUAAPI_ConnectFailed(__CPPAPIMsgInterface msg_interface)
{
    var client = cast<ALittle.MsgSender>(ALittle.FindMsgSender(msg_interface.GetID()));
    if (client ==  null) return;
    client.HandleConnectFailed(null);
}

// 收到服务端发来的数据包
public static __LUAAPI_Message(int id, int rpc_id, lua.MessageReadFactory factory, __CPPAPIMsgInterface msg_interface)
{
    var client = ALittle.FindMsgSender(msg_interface.GetID());
    if (client ==  null) return;
    
    client.HandleMessage(id, rpc_id, factory);
}

//////////////////////////////////////////////////////////////////-
// 收到HTTP应答成功
public static __LUAAPI_HttpClientSucceed(__CPPAPIHttpInterface http_interface)
{
    var client = cast<ALittle.HttpSender>(ALittle.FindHttpSender(http_interface.GetID()));
    if (client ==  null) return;
    client.HandleSucceed();
}

// 收到HTTP应答失败
public static __LUAAPI_HttpClientFailed(__CPPAPIHttpInterface http_interface, string reason)
{
    var client = cast<ALittle.HttpSender>(ALittle.FindHttpSender(http_interface.GetID()));
    if (client ==  null) return;
    client.HandleFailed(reason);
}

public static __LUAAPI_HttpFileSucceed(__CPPAPIHttpFileInterface httpfile_interface)
{
    var client = cast<ALittle.HttpFileSender>(ALittle.FindHttpFileSender(httpfile_interface.GetID()));
    if (client ==  null) return;
    client.HandleSucceed();
}

public static __LUAAPI_HttpFileFailed(__CPPAPIHttpFileInterface httpfile_interface, string reason)
{
    var client = cast<ALittle.HttpFileSender>(ALittle.FindHttpFileSender(httpfile_interface.GetID()));
    if (client ==  null) return;
    client.HandleFailed(reason);
}

public static __LUAAPI_HttpFileProcess(__CPPAPIHttpFileInterface httpfile_interface)
{
    var client = cast<ALittle.HttpFileSender>(ALittle.FindHttpFileSender(httpfile_interface.GetID()));
    if (client ==  null) return;
    client.HandleProcess();
}

//////////////////////////////////////////////////////////////////-
// 这个函数用于C++调用
public static __LUAAPI_TextureLoadSucceed(ALittle.TextureLoader loader, ALittle.RenderTexture texture)
{
    A_LoadTextureManager.HandleTextureLoadSucceed(loader, texture);
}
public static __LUAAPI_TextureLoadFailed(ALittle.TextureLoader loader)
{
    A_LoadTextureManager.HandleTextureLoadFailed(loader);
}
public static __LUAAPI_TextureCutLoadSucceed(ALittle.TextureCutLoader loader, ALittle.RenderTexture texture)
{
    A_LoadTextureManager.HandleTextureCutLoadSucceed(loader, texture);
}
public static __LUAAPI_TextureCutLoadFailed(ALittle.TextureCutLoader loader)
{
    A_LoadTextureManager.HandleTextureCutLoadFailed(loader);
}
public static __LUAAPI_CSVFileLoadSucceed(ALittle.CSVFileLoader loader, ALittle.CSVFile file)
{
    A_CSVConfigManager.HandleCSVFileLoadSucceed(loader, file);
}
public static __LUAAPI_CSVFileLoadFailed(ALittle.CSVFileLoader loader)
{
    A_CSVConfigManager.HandleCSVFileLoadFailed(loader);
}
public static __LUAAPI_RenderDeviceReset()
{
    A_LoadTextureManager.HandleRenderDeviceReset();
}

//////////////////////////////////////////////////////////////////////////////////////
public static __LUAAPI_AudioChunkStopedEvent(int id)
{
    A_AudioSystem.HandleAudioChunkStopedEvent(id);
}
//////////////////////////////////////////////////////////////////////////////////////
public static __LUAAPI_NetworkChanged(int net_type)
{
    ALittle.System_ClearAIFamily();
    A_OtherSystem.HandleNetworkChanged(net_type);
}

public static __LUAAPI_ALittleJsonRPC(string json)
{
    A_OtherSystem.HandleALittleJsonRPC(json);
}

public static __LUAAPI_SystemSelectFile(string path)
{
    A_OtherSystem.HandleSystemSelectFile(path);
}

public static __LUAAPI_SystemSaveFile(string path)
{
    A_OtherSystem.HandleSystemSaveFile(path);
}

//////////////////////////////////////////////////////////////////////////////////////-
// 启动核心模块资源
public static __LUAAPI_SetupMainModule(string debug, string module_name, string core_path, string modules) : bool
{
    A_AudioSystem.Setup();
    return A_ModuleSystem.MainSetup(debug, module_name, core_path, modules);
}
// 释放核心模块资源
public static __LUAAPI_ShutdownMainModule()
{
    A_LayerManager.Shutdown();
    A_AudioSystem.Shutdown();
    A_ModuleSystem.MainShutdown();
}