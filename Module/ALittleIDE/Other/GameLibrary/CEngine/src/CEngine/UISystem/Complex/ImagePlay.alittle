
namespace ALittle;

public class ImagePlay : DisplayLayout
{
    private List<string> _path_list;
    private int _interval;
    private int _play_index;
    private LoopFunction _play_loop;

    public ctor(ControlSystem ctrl_sys)
    {
        // this._path_list = null;    // 播放图片路径列表
        this._interval = 0;        // 播放间隔
        this._play_index = 0;    // 当前播放的图片
        // this._play_loop = null;    // 循环函数
    }
    
    public set path_list(List<string> value)
    {
        this._path_list = value;
        this.RemoveAllChild();
        if (this._path_list == null)
        {
            if (this._play_loop != null)
            {
                A_WeakLoopSystem.RemoveUpdater(this._play_loop);
                this._play_loop = null;
            }
            return;
        }
        // 设置图片列表
        for (var k, v in this._path_list)
        {
            var image = new Image(this._ctrl_sys);
            image.width_type = UIEnumTypes.SIZE_MARGIN;
            image.height_type = UIEnumTypes.SIZE_MARGIN;
            image.texture_name = v;
            image.visible = false;
            this.AddChild(image);
        }
    
        this.Play();
    }
    
    public get path_list() : List<string>
    {
        return this._path_list;
    }
    
    public set interval(int value)
    {
        if (this._interval == value)
            return;
        this._interval = value;
        this.Play();
    }
    
    public get interval() : int
    {
        return this._interval;
    }
    
    public fun Play()
    {
        if (this._play_loop != null)
        {
            A_WeakLoopSystem.RemoveUpdater(this._play_loop);
            this._play_loop = null;
        }
        if (this._path_list == null)
            return;
        // 播放位置为1
        this._play_index = 0;
        // 隐藏所有图片
        for (var k, v in this._childs)
            v.visible = false;
        // 更新循环
        this._play_loop = new LoopFunction(bind(this.PlayUpdate, this), -1, this._interval, 0);
        A_WeakLoopSystem.AddUpdater(this._play_loop);
    }
    
    public fun Stop()
    {
        if (this._play_loop != null)
        {
            A_WeakLoopSystem.RemoveUpdater(this._play_loop);
            this._play_loop = null;
        }
    }
    
    public fun PlayUpdate()
    {
        if (this._child_count == 0) return;
        // 隐藏当前的图片
        if (this._play_index > 0)
            this._childs[this._play_index].visible = false;
        // 索引向前加1
        this._play_index = this._play_index + 1;
        if (this._play_index > this._child_count)
            this._play_index = 1;
        // 显示下一张图片
        this._childs[this._play_index].visible = true;
    }
}