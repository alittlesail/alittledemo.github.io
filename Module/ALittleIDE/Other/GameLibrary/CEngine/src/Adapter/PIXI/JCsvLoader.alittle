
[Language(JavaScript)]
namespace JavaScript;

private var __CSVFILE_MAXID = 0;

public class JCsvFileLoader : ALittle.ICsvFileLoader
{
    private int _id;
    private string _file_path;
    
    public ctor()
    {
        ++__CSVFILE_MAXID;
        this._id = __CSVFILE_MAXID;
    }
    
    public fun Start() { this.StartImpl(); }
    
    private async fun StartImpl()
    {
        var host = location.hostname;
        var port = ALittle.Math_ToInt(location.port);
        if (port == null)
        {
            if (location.protocol == "https:")
                port = 443;
            else
                port = 80;
        }
        var path = this._file_path;
        ALittle.File_MakeDeepDir(ALittle.File_GetFilePathByPath(path));
		var error = ALittle.HttpDownloadRequest(host, port, path, path);
        if (error != null)
        {
            var func = cast<Map<string, Functor<(ALittle.ICsvFileLoader)>>>(window)["__ALITTLEAPI_CsvFileLoadFailed"];
            if (func != null) func(this);
            return;
        }
        
        var file = new JCsvFile();
        if (!file.Load(path))
        {
            var func = cast<Map<string, Functor<(ALittle.ICsvFileLoader)>>>(window)["__ALITTLEAPI_CsvFileLoadFailed"];
            if (func != null) func(this);
            return;
        }
        // 可以删掉文件了，已经没有用了
        ALittle.File_DeleteFile(path);
        
        var func = cast<Map<string, Functor<(ALittle.ICsvFileLoader, ALittle.ICsvFile)>>>(window)["__ALITTLEAPI_CsvFileLoadSucceed"];
        if (func != null) func(this, file);
    }
    
    public fun SetPath(string file_path, bool only_from_asset)
    {
        this._file_path = file_path;
    }
    public fun GetPath() : string { return this._file_path; }
    public fun GetID() : int { return this._id; }
}
