
register namespace lua;

public class __CPPAPISurface
{
}

public static __CPPAPI_LoadSurface(string path) : __CPPAPISurface {}
public static __CPPAPI_CreateSurface(int width, int height) : __CPPAPISurface {}
public static __CPPAPI_SaveSurface(__CPPAPISurface surface, string path) : bool {}
public static __CPPAPI_FreeSurface(__CPPAPISurface surface) {}
public static __CPPAPI_GetSurfaceWidth(__CPPAPISurface surface) : int {}
public static __CPPAPI_GetSurfaceHeight(__CPPAPISurface surface) : int {}
public static __CPPAPI_CutBlitSurface(__CPPAPISurface new_surface, __CPPAPISurface surface, string to, string from) : bool {}
public static __CPPAPI_SetSurfacePixel(__CPPAPISurface surface, int x, int y, int color) : bool {}
public static __CPPAPI_GetSurfacePixel(__CPPAPISurface surface, int x, int y) : int {}
public static __CPPAPI_GetPixelAlpha(int color) : int {}
public static __CPPAPI_SetPixelAlpha(int color, int alpha) : int {}
public static __CPPAPI_GetSurfaceGrid9(__CPPAPISurface surface, string type) : int { }

public static __CPPAPI_GetClipboardImage() : __CPPAPISurface {}
public static __CPPAPI_SetClipboardImage(__CPPAPISurface surface) {}
public static __CPPAPI_HasClipboardImage() : bool {}
