
namespace ALittle;

public class SafeIDCreator
{
    private int _max_id;
    private Map<int, bool> _map;

    public ctor()
    {
        this._max_id = 0;
        this._map = new Map<int, bool>();
    }
    
    public fun CreateID() : int
    {
        var id:int = null;
        // 先从池里面查找
        for (var k, v in this._map)
        {
            id = k;
            break;
        }
        // 如果有，那么就返回，并且从池里面删除
        if (id != null)
        {
            this._map[id] = null;
            return id;
        }
        // 没有的话就把maxid加1，然后再使用
        this._max_id = this._max_id + 1;
        return this._max_id;
    }

    public fun ReleaseID(int id)
    {
        this._map[id] = true;
    }

    public fun PrintStatus()
    {
        var count = 0;
        for (var k, v in this._map)
            ++ count;
        Log("SafeIDCreator:PrintStatus count:"..count.." max_id:"..this._max_id);
    }
}